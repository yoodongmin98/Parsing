마지막 수정일 : 2024/11/06



--------------------------------------------------기능--------------------------------------------------
간단한 기능들 모아놓고 필요시마다 제작하고있는 serial 통신 프로그램입니다

1. 레이더의 I,Q데이터의 과정을 그래프로 보고싶으시다면 [ I ][ ? ][ Q ][ ? ] 이런 형태의 데이터를 보내주시면 됩니다.
	ㄴ 추후 필요시 보내는데이터의 설정이 가능하게끔 제작하겠습니다

2. TI Data는 UART기준입니다. 아직 데이터 예제를 전부 적용시키지않아서,  사용하시는 예제를 보내주시면 데이터추가해서 업데이트하겠습니다.

3. TI Data는 더블버퍼링과 콘솔권한을 사용하기 때문에 관련 권한이 필요하여, 관리자권한으로 exe파일을 실행시켜주셔야 데이터를 보기 편합니다.

4. TimeStamp는 출력되는 Serial 데이터를 줄 단위로 읽어 string형식으로 출력해줍니다. 이 기능은 시간과 날짜출력,연결끊김,포트끊김 확인 기능이 포함됩니다.

5. CSV파일 생성기는 아직 제작중입니다.

--------------------------------------------------알림--------------------------------------------------

1. 라이브러리 대부분이 동적 라이브러리로 링크되어있으나, 여러개의 라이브러리가 포함되어있어 용량이 조금 무겁습니다(현재 약 0.6~0.7Gb)
추후 더 가벼운 프로젝트를 원하신다면 따로 리포지토리를 fork하시고, 라이브러리와 링커를 설정하시면 됩니다.
GitHub clone 링크는 다음과 같습니다.
https://github.com/yoodongmin98/Parsing.git


따로 사용하실 때 설정에 용이하도록 라이브러리 형태를 명시해드립니다.
동적 라이브러리 : ImGui , ImPlot , kissfft , Serial
정적 라이브러리 : OpenXLSX (종속성 : Cmake)

2. 프로젝트 내 코드파일생성, exe파일 생성은 생성경로와 빌드경로를 다르게하여 의도치않은 수정을 막았습니다.
	파일 생성 및 수정을 원하신다면 생성경로와 빌드경로를 맞추시거나 파일을 옮기시면됩니다.

--------------------------------------------------주의점--------------------------------------------------

1. 현재 프로젝트 파일은 c++기반 프로젝트이며, cmakelists를 지원하지 않습니다.

2. 프로젝트 내 라이브러리는 $(ProjectDir)ThirdParty\ 라는 절대경로에 위치해 있습니다. 설정하실때 유의하셔야합니다.

3. OpenXLSX 는 C++언어 표준 17 이상에서만 작동하므로 그 이상의 표준으로 프로젝트를 설정해주셔야 동작합니다.
